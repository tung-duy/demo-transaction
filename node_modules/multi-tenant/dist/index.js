"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tenantDb = exports.getModelByTenant = exports.connectionDb = void 0;
const db_1 = require("./db");
const tenant_1 = require("./tenant");
Object.defineProperty(exports, "getModelByTenant", { enumerable: true, get: function () { return tenant_1.getModelByTenant; } });
const path_1 = require("path");
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const connectionDb = (data) => {
    let path = (0, path_1.resolve)(process.cwd(), 'models');
    typeof data === 'object' ? (path = data.path) : path;
    global.models = (0, db_1.loadModel)({ path });
    const connectionDb = (0, db_1.initClientDbConnection)();
    global.clientConnection = connectionDb;
};
exports.connectionDb = connectionDb;
const tenantDb = (req, res, next) => {
    const authorization = extractToken(req);
    const MULTIPLE_DATABASE = process.env.MULTIPLE_DATABASE;
    if ((MULTIPLE_DATABASE ||
        (typeof MULTIPLE_DATABASE === 'string' &&
            MULTIPLE_DATABASE === 'true')) &&
        authorization) {
        const decoded = jsonwebtoken_1.default.decode(authorization);
        if (decoded === null || decoded === void 0 ? void 0 : decoded.companyId) {
            global.tenantId = decoded.companyId;
        }
    }
    return next();
};
exports.tenantDb = tenantDb;
function extractToken(req) {
    if (req.headers.authorization &&
        req.headers.authorization.split(' ')[0] === 'Bearer') {
        return req.headers.authorization.split(' ')[1];
    }
    else if (req.query && req.query.token) {
        return req.query.token;
    }
    return null;
}
